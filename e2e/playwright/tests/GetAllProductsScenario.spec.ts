// ********RoostGPT********
/*
Test generated by RoostGPT for test MiniProjects using AI Type  and AI Model 

ROOST_METHOD_HASH=042d9a2af7
ROOST_METHOD_SIG_HASH=bd50a1165a

 ########## Scenario ########## 

{
  feature: 'Feature: Product API\r\n' +
    '    As a user of the product API\r\n' +
    '    I want to be able to perform CRUD operations on products\r\n' +
    '    So that I can manage my products effectively',
  background: 'Background:\r\n        Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: {
    title: 'Scenario: Get all products',
    steps: 'When the client sends a GET request "/api/products" to get the list of all products\r\n' +
      'Then the list of products returned should be empty',
    examples: ''
  }
}

*/

// ********RoostGPT********
import { test, expect } from '@playwright/test';

interface ApiResponse {
  id: number;
  name: string;
  description: string;
  price: number;
}

test.describe('Product API', () => {
  // Base URL for API
  const baseURL = 'http://localhost:8080';

  // Test to get all products
  test('Get all products should return an empty list', async ({ request }) => {
    const response = await request.get(`${baseURL}/api/products`);
    expect(response.status()).toBe(200);

    const products: ApiResponse[] = await response.json();
    expect(products).toEqual([]);
  });
});
